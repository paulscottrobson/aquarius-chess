{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fnil\fcharset0 Courier New;}}
\viewkind4\uc1\pard\nowidctlpar\qc\lang1024\f0\fs48 Fall of the Eastern Blocks\f1\fs24\'d4\par
\pard\nowidctlpar\par
\par
\b\f0\par
\par
\par
\pard\nowidctlpar\qc\fs28 Introduction\par
\fs24\par
\pard\nowidctlpar Go \b0 back to the 1980\rquote s.  The end of the cold war is almost upon us.  We didn\rquote t get this far without a struggle.  It was the will of the people which brought communism to it\rquote s knees.  Recreate this bitter battle for freedom.  \b YOU\b0  are trying to tear down the Berlin wall and open up democracy, but meanwhile communist hard-liners who fear change and the upset of their delicate control are trying to drop new blocks and rebuild it.  Undoubtedly, you will eventually succumb to the establishment, but you will not have failed.  Your actions will inspire the people.  You achieve martyr status and others carry on your mission after you're gone.  Cheesy?  Well, maybe.\par
\par
\par
\pard\nowidctlpar\qc\fs28 How to Play\par
\par
\pard\nowidctlpar\fs24 1. Hook up your Aquarius with 16K ram cart and Data Recorder according to your user\rquote s     \par
    manual.  \par
\par
2. Insert the \b\ldblquote Fall of the Eastern Blocks\b0\f1\'d4\f0\rdblquote  cassette into your Data Recorder.  Ensure that side                                                  \par
    \ldblquote A\rdblquote  is facing up and the cassette is rewound to the beginning.\par
\par
3. Power on your Aquarius computer.\par
\par
4.  Type: \b CLOAD\b0         \par
\par
5.  Press: \b RTN\b0\par
\par
6.  Press \b RTN\b0  again.\par
\par
7.  Press \ldblquote Play\rdblquote  on your Data Recorder.\par
\par
8.  When the screen responds with: \ldblquote ok\rdblquote   press stop on your Data Recorder.\par
\par
9.  Type: \b RUN\b0\par
\par
10. Press \b RTN\b0\par
\par
11.  Follow the instructions on screen to begin playing.\par
\par
\par
\par
\pard\nowidctlpar\qc\fs28 Controls\par
\pard\nowidctlpar\par
\fs24 At default your controls for the game are:\par
\par
\ul\b ACTION\ulnone\b0\tab\tab\ul\b KEY\ulnone\b0\par
\par
move piece right:\tab >\par
move piece left:\tab m\par
rotate piece:\tab\tab <\par
speed descent:\tab\tab c\tab\par
slow descent to norm:\tab d\par
\par
Yes it looks odd, but when you place your fingers on the keys it will feel right.  You can find out how to change the controls in the \ldblquote customizing the game\rdblquote  section.\par
\par
Position the piece into place by rotating it and moving it left and right.  Once you have the piece lined up to where you want it to fall, press the \ldblquote c\rdblquote  key to make it drop quickly.  If you did this by mistake or you change your mind, just press the \ldblquote d\rdblquote  key to return to normal speed\par
\par
One difference between my version and others a few of you may notice, is that you can only rotate the piece clockwise.  After observing many different people\rquote s play patterns, I noted that rarely do they use the counterclockwise rotation.  By leaving this out, I was able to save some ram (read: loading time) and improve the responsiveness of the controls.  \par
\par
Since this minor omission may occasionally put the player at a disadvantage, I added a new feature at low programming overhead to compensate.  You now get one free  move before the new block comes on the screen.  Example:  you just placed  a block on the bottom.  You can see the next piece previewed so you get an idea of where it needs to go or how it needs to be rotated.  As soon as you hear the sound of the last block clicking into place, you can enter a move for the next piece which hasn\rquote t even appeared on the screen yet.  So after the click, if you hit the \ldblquote >\rdblquote  key, and as soon as the new block appears on the screen, it will instantly move one space to the right.  If you hit the rotate key, the block will make one rotation instantly upon entering the screen etc.  \par
\par
It is not as complicated as it might sound.  If you decide you don\rquote t like this feature (I think you will, though) see the \ldblquote customizing the game\rdblquote  section to disable it.\par
\par
\par
\pard\nowidctlpar\qc\b\fs28 Game Mechanics\b0\par
\pard\nowidctlpar\fs24\par
Scoring is also another divergence.  I award no points simply for the pieces floating down the screen as in some versions.  My game only gives points for cleared lines.  I try to reward risk taking.  It is riskier to wait for a \ldblquote Tetris\rdblquote  than to clear one line at a time and even more so at the higher levels.  So hear is how points are awarded:\par
\par
Number of lines cleared ^2 * 10 * the level number.\par
\par
For example clearing three lines at once on level 5 would give you 450 points.  Clearing 3 lines individually on the same level would only yield a cumulative 150 points.  It\rquote s really satisfying to clear 4 lines at once on levels 10 and higher!\par
\par
The speed of block descent increases with each new level.  Levels advance after every ten lines you clear.  The speed continues to increase until level 18.  After that your score will continue to follow the same formula for the subsequent levels even though the difficulty doesn\rquote t increase.  (If you are actually able to play that far, without cheating of course, please let me know!)\par
\par
\par
\pard\nowidctlpar\qc\b\fs28 Customizing the Game\b0\fs24   \par
\pard\nowidctlpar\par
Here are your options:\par
\par
Disable Free move by adding line 733 as follows\par
\par
\b 733 poke 14346,0\b0\par
\par
If you want to change the \ldblquote c\rdblquote  key so the piece speeds its descent only while you press it, then retype line 1060 as follows:\par
\par
\b 1060 If x$=\rdblquote c\rdblquote  then poke 14350,0: WA=LW: NEXT WA: GOTO 1210\b0\par
\par
If you want to make every block the long straight \ldblquote Tetris\rdblquote  block, then change line 705 as follows: (to change it to a different piece then replace the \ldblquote 1\rdblquote  with 3,7,11,15,17 or 19)\par
\par
\b 705 p=1\b0\par
\par
If you want to change the controls, then retype lines 1030, 1040, 1045, 1050, 1060, or 1065.\par
You simple replace the letter or symbol in quotes \ldblquote\rdblquote  with the letter or symbol on the key you want to use.  For example to change the rotate key to the \ldblquote L\rdblquote  key retype line 1050 as follows:\par
\par
\b 1050 If x$=\rdblquote l\rdblquote  thenpoke14350,0:gosub2000:WA=WA+INT(E*LW)+1:NEXTWA:goto1210\b0\par
\par
\par
\pard\nowidctlpar\qc\b\fs28 Programming Notes\par
\par
\pard\nowidctlpar\b0\fs24 The original reason I decided to try and make a Tetris game for the Aquarius, is because my wife is a huge Tetris fan.  It\rquote s the only videogame she plays.  I tried to get her to take a look at some of my Aquarius stuff, but after she found out it doesn\rquote t play Tetris, she refused to even acknowledge it! ;-)  So I set out to get her to play Aquarius Tetris.\par
 \par
I have never been completely satisfied with the end results of the game.  Don\rquote t get me wrong, it still plays well, but there are some things I would change.  For one thing, sounds are pretty sparse in the game.  But it is not for a lack of trying.  I wanted to have a sound for every movement of the game piece.  However, maintaining the responsiveness to the player\rquote s key inputs was a delicate balancing act.  Apparently sound production is very CPU intensive.  While the Aquarius is generating a sound it completely ignores everything else, such as key presses.  Even the slightest of sounds would upset the flow.\par
\par
I would love to have Z80 machine language implemented in the game.  Someday, you can expect that I will be turning out much more professional Aquarius games.  My Aquarius collection isn\rquote t going anywhere and I have many years to plug away at it.  Of course, by then I expect many of you won\rquote t care anymore ;-)\par
\par
I sincerely hope you enjoy playing my game.  Any questions can be directed to me at mattelaquarius@yahoo.com.\par
\par
Thank You\par
\par
 \par
\pard\nowidctlpar\qc\b\fs28 Random Ramblings\b0\fs24\par
\pard\nowidctlpar\par
\par
What self respecting computer can not play a version of Tetris?  Well, the Aquarius has lacked this title for long enough!  I have taken it upon myself to give our overgrown calculator computer some badly needed self respect.  \par
\par
The title of the game is "Fall of the Eastern Blocks\'99"  It has taken me a few months to put this game together in my free time.  The going was more difficult than I anticipated.  But slowly the game kept evolving as I overcame one programming obstacle after another.  I have done things which I believe have never before been achieved in basic on the Aquarius.  The first one is: in game scoring.  This is not generally done on the Aquarius, because there is no "locate" command to move the cursor freely about the screen.  Instead you usually receive a score update between rounds, or after the game ends.  The second major achievement, and perhaps most importantly for a Tetris style game is: continuous keypress.  Normally in Aquarius Basic when you read the keyboard with "inkey$" the machine will only register one entry per press.  For example if I wanted to move my game piece over two spaces to the right, I would have to press and release the "r" key twice.  While I would still be able to make a Tetris game in that manner, there would be a failure to capture the true feel of the game. Thanks to the Aquarius technical documentation I received from Andrew, I was able to locate a byte in memory used for "keyboard debounce control." I thought this was the North West passage to the solution of my "inkey$" problem. Ultimately it was, but not as I expected. When I peeked that location, it always contained a value of "4." Logically, I thought that number corresponded to the minimum release time before the machine would register the next key press. (about 1/2 second by my estimate) So I started experimenting with changing the value at that address. The test program I used was:\par
\par
10 poke14350,0                         (The address and value I am playing with. I thought 0 would mean "no delay")\par
20 x$=inkey$ : Printx$ : goto 10\par
Results were no good. So I changed the value of 0 to different numbers which I thought would be significant, such as powers of 2 and the like. Still no results. Then I decided to be thorough and try all 256 values one at a time. Here was my next test program:\par
10 x=0\par
20 x$=inkey$ : If x$=Q THEN POKE14350,X : X=X+1\par
30 PRINT X$ \par
40 GOTO 20\par
An admittedly crude way to test each value, then increment to value by 1 every time I press "Q". However, I believe that if I hadn't chosen such a peculiar format, I may never have stumbled upon the solution to my problem. (normally, I'd have put the "X=X+1" before the poke) As soon as I hit that Q key to increment the value, I saw a whole slew of Q's shoot up the screen! I did it!!! For whatever reason, this ONLY works if the poke immediately follows the IF...THEN... statement referencing the string variable created by inkey$. I freely admit that I do not understand how or why this works, but I am not complaining! ;-) You can poke all you want anywhere else in the program, and Aquarius will only register one keypress at a time. Now, my Tetris game was going to feel more like Tetris.    \f1\par
\par
\par
\pard\lang1033\f2\fs20\par
}
 